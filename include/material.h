/* * Copyright (C) 2004-2018 David Bernstein <david.h.bernstein@gmail.com> * * This file is part of Mesh. * * Mesh is free software: you can redistribute it and/or modify * it under the terms of the GNU General Public License as published by * the Free Software Foundation, either version 3 of the License, or * (at your option) any later version. * * Mesh is distributed in the hope that it will be useful, * but WITHOUT ANY WARRANTY; without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the * GNU General Public License for more details. * * You should have received a copy of the GNU General Public License * along with Mesh.  If not, see <http://www.gnu.org/licenses/>.*/ #ifndef _material_h_#define _material_h_#include "array.h"#include "chemicalsystem.h"namespace NAMESPACE {	class Material	{	public:		// Constructor		Material(void) { };				// Destructor		~Material(void) { };				// diffusion coefficients		void SetDiffusionCoefficients(const Array<double> &coef);		double DiffusionCoefficient(short index) const;		bool DiffusionOn(short index) const;		short NumDiffusionSpecies(void) const;	private:		// diffusion coefficients		Array<double> mDiffusionCoefficient;				// chemical reactions (these refer to an external instance of ReactionSystem)		Array<short> mReaction;	};				inline void Material::SetDiffusionCoefficients(const Array<double> &coef)	{		mDiffusionCoefficient = coef;		return;	}				inline double Material::DiffusionCoefficient(short index) const	{		return mDiffusionCoefficient[index];	}				inline bool Material::DiffusionOn(short index) const	{		return mDiffusionCoefficient[index] > 0.0;	}}#endif // _material_h_	